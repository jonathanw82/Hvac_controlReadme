# Generated by Django 4.0.2 on 2022-03-01 15:26

import datetime
import uuid

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='HvacController',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('location', models.CharField(max_length=50)),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('mac_address', models.CharField(max_length=50, unique=True)),
                ('host_name', models.CharField(help_text='Mqtt host', max_length=50)),
                ('software_version', models.CharField(max_length=50)),
                ('day_night', models.BooleanField(default=None, null=True)),
                ('temp_p', models.FloatField(default=None, null=True)),
                ('temp_i', models.FloatField(default=None, null=True)),
                ('temp_d', models.FloatField(default=None, null=True)),
                ('hum_p', models.FloatField(default=None, null=True)),
                ('hum_i', models.FloatField(default=None, null=True)),
                ('hum_d', models.FloatField(default=None, null=True)),
                ('target_temp', models.FloatField(default=None, null=True)),
                ('target_hum', models.FloatField(default=None, null=True)),
                ('time_period', models.FloatField(default=None, null=True)),
                ('night_start_hour', models.IntegerField(default=None, null=True)),
                ('night_finish_hour', models.IntegerField(default=None, null=True)),
                ('night_start_minute', models.IntegerField(default=None, null=True)),
                ('night_finish_minute', models.IntegerField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MeasurementFloat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_stamp', models.DateTimeField(default=datetime.datetime.now)),
                ('measurement_type', models.CharField(choices=[('temp', 'Temp'), ('temp_p_response', 'Temp P Response'), ('temp_i_response', 'Temp I Response'), ('temp_d_response', 'Temp D Response'), ('temp_pid_out', 'Temp Pid Output'), ('temp_heat_time_on', 'Temp Heat Time On'), ('temp_heat_time_off', 'Temp Heat Time Off'), ('hum', 'Hum'), ('hum_p_response', 'Hum P Response'), ('hum_i_response', 'Hum I Response'), ('hum_d_response', 'Hum D Response'), ('hum_pid_out', 'Hum Pid Output'), ('hum_heat_time_on', 'Hum Heat Time On'), ('hum_heat_time_off', 'Hum Heat Time Off'), ('error_temp', 'Error Temp'), ('error_hum', 'Error Hum')], max_length=25)),
                ('value', models.FloatField()),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='floatmeasurements', to='sensor_data.hvaccontroller')),
            ],
        ),
        migrations.CreateModel(
            name='MeasurementBool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_stamp', models.DateTimeField(default=datetime.datetime.now)),
                ('measurement_type', models.CharField(choices=[('temp_heat_output', 'Temp Heat Output'), ('temp_cooling_output', 'Temp Cooling Output'), ('hum_output', 'Hum Output'), ('dehum_output', 'Dehum Output')], max_length=25)),
                ('value', models.BooleanField()),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='boolmeasurements', to='sensor_data.hvaccontroller')),
            ],
        ),
    ]
